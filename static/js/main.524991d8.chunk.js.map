{"version":3,"sources":["components/UI/TextInput.tsx","components/UI/Button.tsx","components/UI/Modal.tsx","components/AddCountryForm.tsx","components/StyledCountryItem.tsx","components/RatingStars.tsx","components/ShowCountryDetails.tsx","components/CountryItem.tsx","helpers/fetchningCountryData.js","components/CountriesGrid.tsx","App.tsx","index.tsx"],"names":["StyledBlock","styled","div","TextInput","id","label","textarea","value","name","onChange","type","htmlFor","undefined","StyledButton","button","Button","children","className","onClick","StyledModalOverlay","StyledModal","Modal","title","content","hideModal","Wrapper","form","AddCountryForm","addCountry","initialValues","country","rating","description","imageUrl","useState","inputValues","setInputValues","handleInputChange","e","updatedValue","target","showErrorModal","setShowErrorModal","onSubmit","preventDefault","trim","length","parseInt","formValidation","StyledCountryItem","props","star","icon","faStar","StyledRating","RatingStars","Array","fill","map","Math","random","StyledOverlay","background","StyledDetailsInfo","ShowCountryDetails","flagUrl","capital","currency","continent","population","hideDetails","src","alt","CountryItem","setCurrency","setCapital","setContinent","setFlagUrl","setPopulation","showDetails","setShowDetails","toggleDetails","useEffect","setFlag","fetch","then","resp","json","data","curr","Object","keys","currencies","continents","flags","png","catch","fetchCountryData","StyledGrid","CountriesGrid","countriesList","countryListArr","App","setCountriesList","showForm","setShowForm","toggleForm","newCountry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.524991d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBlock = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 25px;\r\n    min-height: 80px;\r\n\r\n    * {\r\n        width: 100%;\r\n        font-size: 24px;\r\n    }\r\n\r\n    label {\r\n        font-weight: bold;\r\n        margin-bottom: 0.8rem;\r\n       \r\n    }\r\n\r\n    input, textarea {\r\n        border: 1px solid gray;\r\n        border-radius: 2px;\r\n        transition: border, background-color 0.8s;\r\n        padding: 3px 8px;\r\n    }\r\n\r\n    input:hover, textarea:hover {\r\n        border: 1px solid #0000d9;\r\n    }\r\n\r\n    input:focus, textarea:focus {\r\n        outline: 2px solid #000022;\r\n        border: none;\r\n        background-color: #e5e5f6;\r\n    }\r\n`;\r\n\r\ninterface Props{\r\n    id: string,\r\n    label: string,\r\n    textarea?: boolean;\r\n    value?: string,\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => void,\r\n    name: string,\r\n    type?: string;\r\n}\r\n\r\nconst TextInput: React.FC<Props> = ({id, label, textarea, value, name, onChange, type=\"text\"}) => {\r\n    return (\r\n        <StyledBlock>\r\n            <label htmlFor={id}>{label}</label>\r\n            {\r\n                !textarea ? \r\n                <input type={type} id={id} name={name} value={value ? value : undefined} onChange={onChange} />\r\n                :\r\n                <textarea id={id} name={name} value={value ? value : undefined} onChange={onChange} />\r\n            } \r\n        </StyledBlock>\r\n    );\r\n};\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n    background-color: #000011;\r\n    color: white;\r\n    font-weight: bold;\r\n    padding: 6px 12px;\r\n    font-size: 24px;\r\n    border: none;\r\n    border-radius: 3px;\r\n    margin-top: 15px;\r\n    cursor: pointer;\r\n    transition: all 0.4s;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    left: 14px;\r\n\r\n    &:hover {\r\n        background-color: #000022;\r\n        color: gray;\r\n    }\r\n\r\n    &.show-form {\r\n        color: black;\r\n        background: white;\r\n        position: static;\r\n        display: block;\r\n        margin: 0 auto 20px auto;\r\n    }\r\n\r\n    &.hideDetails {\r\n        position: static;\r\n        display: block;\r\n        margin: 20px auto;\r\n    }\r\n\r\n    &.country-item {\r\n        bottom: 10px;\r\n        right: 14px;\r\n        left: auto;\r\n    }\r\n`;\r\n\r\ninterface Props {\r\n    children: unknown,\r\n    type?: \"button\" | \"submit\",\r\n    className?: string,\r\n    onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({children, type, className, onClick}) => {\r\n    return (\r\n        <StyledButton onClick={onClick} className={className} type={type}>{children}</StyledButton>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst StyledModalOverlay = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    inset: 0;\r\n    position: fixed;\r\n    background-color: #262626;\r\n    z-index: 10;\r\n\r\n    .relative-wrapper {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        overscroll-y: auto;\r\n    }\r\n`;\r\n\r\nconst StyledModal = styled.div`\r\n    position: absolute;\r\n    width: 90%;\r\n    max-width: 1000px;\r\n    background: white;\r\n    border-radius: 5px;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    h1 {\r\n        padding: 15px 8px;\r\n        border-radius: 0 0 5px 5px;\r\n        background-color: #000011;\r\n        color: white;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        letter-spacing: 4px;\r\n        margin-bottom: 40px;\r\n    }\r\n\r\n    p {\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        color: red;\r\n        font-size: 24px;\r\n        margin-bottom: 40px;\r\n    }\r\n`\r\ninterface Props {\r\n    title: string\r\n    content: string\r\n    hideModal: () => void\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({title, content, hideModal}) => {\r\n    return (\r\n        <StyledModalOverlay onClick={hideModal}>\r\n            <div className=\"relative-wrapper\">\r\n                <StyledModal>\r\n                    <header>\r\n                        <h1>{title}</h1>\r\n                    </header>\r\n                    <p>{content}</p>\r\n                    <footer>\r\n                        <Button onClick={hideModal} className=\"hideDetails\">OK</Button>\r\n                    </footer>\r\n                </StyledModal>\r\n            </div>\r\n        </StyledModalOverlay>\r\n    );\r\n};\r\n\r\nexport default Modal;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport TextInput from './UI/TextInput';\r\nimport Button from './UI/Button';\r\nimport Modal from './UI/Modal';\r\n\r\nconst Wrapper = styled.form`\r\n    width: 800px;\r\n    margin: 0 auto;\r\n    max-width: 100%;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    padding: 20px 14px;\r\n    min-height: 550px;\r\n    position: relative;\r\n`;\r\n\r\ninterface Props {\r\n    addCountry: (country: {\r\n        country: string,\r\n        rating: string,\r\n        description: string,\r\n        imageUrl: string\r\n    }) => void,\r\n}\r\n\r\nconst AddCountryForm: React.FC<Props> = ({addCountry}) => {\r\n\r\n    const initialValues = {\r\n        country: \"\",\r\n        rating: \"\",\r\n        description: \"\",\r\n        imageUrl: \"\"\r\n    };\r\n\r\n    const [inputValues, setInputValues] = useState(initialValues);\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const updatedValue = e.target.value;\r\n\r\n        setInputValues(\r\n            {...inputValues,\r\n                [e.target.name]: updatedValue,\r\n            }\r\n        );\r\n    };\r\n\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n\r\n    const toggleErrorModal = () => {\r\n        setShowErrorModal(!showErrorModal)\r\n    };\r\n\r\n    const formValidation = () => {\r\n        const {country, rating, description} = inputValues;\r\n        if (country.trim().length === 0) {\r\n            setShowErrorModal(true);\r\n            return;\r\n        } else if (description.trim().length === 0) {\r\n            setShowErrorModal(true);\r\n            return;\r\n        } else if (rating.trim().length === 0 || parseInt(rating) <= 0 || parseInt(rating) > 5) {\r\n            setShowErrorModal(true);\r\n            return;\r\n        }\r\n        /* If form is valid we can add country to an array */\r\n        addCountry(inputValues);\r\n        setInputValues(initialValues);\r\n    };\r\n\r\n    const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        formValidation();\r\n    }\r\n\r\n\r\n     return (\r\n    <>\r\n        {showErrorModal ?\r\n        <Modal title=\"ERROR\" content=\"Please enter valid informations\" hideModal={toggleErrorModal} />\r\n        :\r\n        <Wrapper onSubmit={handleSubmitForm}>\r\n        <TextInput id=\"country\" label=\"Country\" name=\"country\" value={initialValues.country} onChange={handleInputChange} />\r\n        <TextInput type=\"number\" id=\"rating\" label=\"Your rating (1-5)\" name=\"rating\" onChange={handleInputChange} />\r\n        <TextInput id=\"description\" label=\"Describe it!\" name=\"description\" textarea={true} value={initialValues.description} onChange={handleInputChange} />\r\n        <TextInput id=\"imageUrl\" label=\"Image URL (optional)\" name=\"imageUrl\" onChange={handleInputChange} />\r\n        <Button type=\"submit\">Add Country</Button>\r\n    </Wrapper>\r\n    } \r\n    </>\r\n    )\r\n};\r\n\r\nexport default AddCountryForm;","import styled from 'styled-components';\r\n\r\nconst StyledCountryItem = styled.div<{imageUrl: string}>`\r\n    width: 100%;\r\n    max-width: 600px;\r\n    min-height: 260px;\r\n    margin-bottom: 30px;\r\n    border-radius: 5px;\r\n    position: relative;\r\n    padding: 1rem;\r\n    z-index: 1;\r\n\r\n    @media (max-width: 330px) {\r\n        & {\r\n            min-height: 285px;\r\n        }\r\n    }\r\n\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        inset: 0;\r\n        background: url(\"${(props) => props.imageUrl ? props.imageUrl : 'https://images.unsplash.com/photo-1488646953014-85cb44e25828?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dHJhdmVsfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60'}\");\r\n        background-size: cover;\r\n        opacity: 0.2;\r\n        z-index: -1;\r\n        border-radius: 5px;\r\n        filter: blur(3px);\r\n        transition: all 0.4s;\r\n    }\r\n\r\n    &:hover:before {\r\n        filter: blur(0px);\r\n        opacity: 0.4;\r\n    }\r\n\r\n    &:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        inset: 0;\r\n        background: white;\r\n        z-index: -2;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    h1 {\r\n        text-transform: uppercase;\r\n        padding-bottom: 10px;\r\n        border-bottom: 3px solid #000011;\r\n    }\r\n\r\n    .rating {\r\n        padding: 4px;\r\n        background-color: #000022;\r\n        color: white;\r\n        font-size: 14px;\r\n        text-align: center;\r\n        opacity: 0.5;\r\n        position: absolute;\r\n        top: 147px;\r\n        width: 100%;\r\n        left: 0;\r\n        z-index: -1;\r\n        }\r\n\r\n        @media (max-width: 330px) {\r\n            .rating {\r\n                margin-top: 8px;\r\n            }\r\n    }\r\n\r\n    svg {\r\n        color: #000022;\r\n        filter:drop-shadow(2px 3px 4px #000011);\r\n        transition: all 0.2s;\r\n    }\r\n\r\n    &:hover svg {\r\n        filter:drop-shadow(2px 3px 5px #000011);\r\n    }\r\n\r\n    .currency {\r\n        font-weight: bold;\r\n        margin-top: 50px;\r\n    }\r\n\r\n    @media (max-width: 330px) {\r\n        .currency {\r\n            margin-top: 58px;\r\n        }\r\n\r\n    .currency span {\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nexport default StyledCountryItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst star = <FontAwesomeIcon icon={faStar} />;\r\n\r\ninterface Props {\r\n    rating: string,\r\n}\r\n\r\nconst StyledRating = styled.div<Props>`\r\n    width: 100%;\r\n    padding: 0 8px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin-top: 1.8rem;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst RatingStars: React.FC<Props> = ({rating}) => {\r\n\r\n    return (\r\n        <StyledRating rating={rating}>\r\n            {   \r\n                Array(parseInt(rating)).fill(null).map(() => <span key={Math.random()}>{star}</span>)\r\n            }\r\n        </StyledRating>\r\n    );\r\n};\r\n\r\nexport default RatingStars;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport RatingStars from './RatingStars';\r\nimport Button from './UI/Button';\r\n\r\ninterface OverlayProps {\r\n    background: string\r\n}\r\n\r\nconst StyledOverlay = styled.div<OverlayProps>`\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 10;\r\n\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        inset: 0;\r\n        background-image: url(\"${(props) => props.background ? props.background : 'https://images.unsplash.com/photo-1488646953014-85cb44e25828?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dHJhdmVsfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60'}\");\r\n        background-size: cover;\r\n        background-position: center;\r\n    }\r\n\r\n    .wrapper {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow-y: scroll;\r\n    }\r\n`;\r\n\r\nconst StyledDetailsInfo = styled.div`\r\n    width: 1000px;\r\n    max-width: 90%;\r\n    background: white;\r\n    border-radius: 5px;\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    header {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        background: #00002B;\r\n        color: white;\r\n        padding: 1rem;\r\n        border-radius: 5px;\r\n        margin-bottom: 1.5rem;\r\n    }\r\n\r\n    h1 {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 55px;\r\n        text-align: center;\r\n        flex: 1;\r\n        margin-bottom: 22px;\r\n    }\r\n\r\n    img {\r\n        width: 100%;\r\n        max-width: 250px;\r\n    }\r\n\r\n    ul {\r\n        padding-left: 60px;\r\n        font-size: 20px;\r\n    }\r\n\r\n    @media (max-width: 370px) {\r\n        ul {\r\n            padding-left: 20px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 550px) {\r\n        ul {\r\n            margin-top: 20px;\r\n        }\r\n    }\r\n\r\n    li {\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    li span {\r\n        font-weight: bold;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    svg {\r\n        color: #000022;\r\n        filter:drop-shadow(2px 3px 4px #000011);\r\n        transition: all 0.2s;\r\n    }\r\n\r\n     svg:hover {\r\n        filter:drop-shadow(2px 3px 5px #000011);\r\n    }\r\n\r\n    p {\r\n        width: 100%;\r\n        max-width: 700px;\r\n        text-align: center;\r\n        margin: 40px auto;\r\n        padding: 0 0.5rem;\r\n        font-size: 25px;\r\n        text-shadow: 0px 2px 3px rgba(0,0,0,0.5);\r\n    }\r\n`;\r\n\r\ninterface Props {\r\n    background: string,\r\n    country: string,\r\n    flagUrl: string,\r\n    rating: string,\r\n    description: string,\r\n    capital: string\r\n    currency: string\r\n    continent: string\r\n    population: string\r\n    hideDetails: () => void\r\n}\r\n\r\nconst ShowCountryDetails: React.FC<Props> = ({background, country, flagUrl, rating, description, capital, currency, continent, population, hideDetails}) => {\r\n    return (\r\n   \r\n        <StyledOverlay background={background} onClick={hideDetails}>\r\n            <div className=\"wrapper\">\r\n            <StyledDetailsInfo>\r\n                <header>\r\n                    <h1>{country}</h1>\r\n                    <img src={flagUrl} alt={`flag of ${country}`} />\r\n                </header>\r\n                <ul>\r\n                    <li><span>Capital:</span> {capital}</li>\r\n                    <li><span>Currency:</span> {currency}</li>\r\n                    <li><span>Continent:</span> {continent}</li>\r\n                    <li><span>Population:</span> {population}</li>\r\n                </ul>\r\n                <RatingStars rating={rating} />\r\n                <p>{description}</p>\r\n                <Button className=\"hideDetails\">BACK</Button>\r\n            </StyledDetailsInfo>\r\n            </div>\r\n        </StyledOverlay>\r\n      \r\n    );\r\n};\r\n\r\nexport default ShowCountryDetails;","import React, { useState, useEffect } from 'react';\r\nimport StyledCountryItem from './StyledCountryItem';\r\nimport { fetchCountryData } from '../helpers/fetchningCountryData';\r\nimport RatingStars from './RatingStars';\r\nimport Button from './UI/Button';\r\nimport ShowCountryDetails from './ShowCountryDetails';\r\n\r\n\r\n    interface Props {\r\n        country: string,\r\n        description: string,\r\n        imageUrl: string,\r\n        rating: string,\r\n    }\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst CountryItem: React.FC<Props> = ({country, description, imageUrl, rating}) => {\r\n\r\n    /* All data about country. It will be set on fetching */\r\n    const [currency, setCurrency] = useState(\"?\");\r\n    const [capital, setCapital] = useState(\"\");\r\n    const [continent, setContinent] = useState(\"\");\r\n    const [flagUrl, setFlagUrl] = useState(\"\");\r\n    const [population, setPopulation] = useState(\"\");\r\n\r\n    /* For ShowCountryDetails Component */\r\n    const [showDetails, setShowDetails] = useState(false);\r\n\r\n    const toggleDetails = () => {\r\n        setShowDetails(!showDetails);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchCountryData(country, setCurrency, setCapital, setContinent, setFlagUrl, setPopulation);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <StyledCountryItem imageUrl={imageUrl}>\r\n            <h1>{country}</h1>\r\n            <RatingStars rating={rating} />\r\n            <p className=\"rating\">YOUR RATING</p>\r\n            <p className=\"currency\"><span>Currency: </span>{currency}</p>\r\n            <Button onClick={toggleDetails} className=\"country-item\">Show details</Button>\r\n        </StyledCountryItem>\r\n        {showDetails ?\r\n        <ShowCountryDetails background={imageUrl} country={country} flagUrl={flagUrl} rating={rating} description={description} capital={capital} currency={currency} population={population} continent={continent} hideDetails={toggleDetails} />\r\n        : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CountryItem;","export let capital = \"\";\r\nexport let continent = \"\";\r\nexport let flag = \"\";\r\nexport let population = \"\";\r\n\r\nexport const fetchCountryData = (\r\n  country,\r\n  setCurrency,\r\n  setCapital,\r\n  setContinent,\r\n  setFlag,\r\n  setPopulation\r\n) => {\r\n  fetch(`https://restcountries.com/v3.1/name/${country}`)\r\n    .then((resp) => resp.json())\r\n    .then((data) => {\r\n      const curr = Object.keys(data[0].currencies)[0];\r\n      setCurrency(curr);\r\n      setCapital(data[0].capital[0]);\r\n      setContinent(data[0].continents[0]);\r\n      setFlag(data[0].flags.png);\r\n      setPopulation(data[0].population);\r\n    })\r\n    .catch(() => setCurrency(\"?\"));\r\n};\r\n","import React from 'react';\r\nimport CountryItem from './CountryItem';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    justify-items: center;\r\n    width: 100%;\r\n    max-width: 1400px;\r\n    margin: 30px auto 0 auto;\r\n\r\n    @media (max-width: 1280px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\ninterface Props {\r\n    countriesList: {\r\n        country: string;\r\n        rating: string;\r\n        description: string;\r\n        imageUrl: string;\r\n    }[],\r\n}\r\n\r\nconst CountriesGrid: React.FC<Props> = ({countriesList}) => {\r\n\r\n    return (\r\n        <StyledGrid>\r\n            {countriesList.map(country => {\r\n               return (<CountryItem key={country.description} {...country} />)\r\n            })}\r\n        </StyledGrid>\r\n    )\r\n};\r\n\r\nexport default CountriesGrid;","import React, { useState } from 'react';\r\nimport AddCountryForm from './components/AddCountryForm';\r\nimport styled from 'styled-components';\r\nimport Button from './components/UI/Button';\r\nimport CountriesGrid from './components/CountriesGrid';\r\n\r\nconst countryListArr = [\r\n  {\r\n    country: \"Egypt\",\r\n    rating: \"5\",\r\n    description: \"It was awesome!\",\r\n    imageUrl: \"https://images.unsplash.com/photo-1523478482487-1eed2b3d9939?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\",\r\n  },\r\n  {\r\n    country: \"Greece\",\r\n    rating: \"4\",\r\n    description: \"It was nice!\",\r\n    imageUrl: \"https://images.unsplash.com/photo-1580502304784-8985b7eb7260?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\",\r\n  },\r\n  {\r\n    country: \"Japan\",\r\n    rating: \"1\",\r\n    description: \"It was terrible!\",\r\n    imageUrl: \"https://images.unsplash.com/photo-1542640244-7e672d6cef4e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\",\r\n  },\r\n  {\r\n    country: \"France\",\r\n    rating: \"3\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla augue ipsum, congue at lectus id, sollicitudin fringilla ligula. Cras porttitor consectetur magna.\",\r\n    imageUrl: \"https://images.unsplash.com/photo-1502602898657-3e91760cbb34?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=873&q=80\",\r\n  },\r\n];\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  padding: 3rem 10px;\r\n  background-color: #0c0c0c;\r\n`;\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [countriesList, setCountriesList] = useState(countryListArr);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const toggleForm = () => {\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  const addCountry = (newCountry) => {\r\n    setCountriesList([newCountry, ...countriesList])\r\n    toggleForm();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={toggleForm} className=\"show-form\">{showForm ? \"Hide\" : \"Add country\"}</Button>\r\n      {showForm && <AddCountryForm addCountry={addCountry} />}\r\n      <CountriesGrid countriesList={countriesList} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}